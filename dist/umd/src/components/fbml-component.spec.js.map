{"version":3,"file":"fbml-component.spec.js","sourceRoot":"","sources":["../../../../src/components/fbml-component.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { FBMLAttribute, FBMLComponent, FBMLInstanceMethod } from './fbml-component';\r\nimport { Component, ElementRef, Renderer2, DebugElement } from '@angular/core';\r\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nclass FBTestComponent extends FBMLComponent {\r\n\r\n  _instance = {\r\n    testMethod: () => 'success',\r\n    testMethodWithArgs: (...args: any[]) => args.length\r\n  };\r\n\r\n  @FBMLAttribute\r\n  testAttr: string;\r\n\r\n  constructor(el: ElementRef, rnd: Renderer2) {\r\n    super(el, rnd, 'fb-test');\r\n  }\r\n\r\n  @FBMLInstanceMethod\r\n  testMethod(): string { return; }\r\n\r\n  @FBMLInstanceMethod\r\n  testMethodWithArgs(arg1: string, arg2: string): number { return; }\r\n\r\n}\r\n\r\ndescribe('FBMLComponent', () => {\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [ FBTestComponent ]\r\n    }).compileComponents();\r\n  }));\r\n\r\n  it('should create an element with class fb-test', () => {\r\n\r\n    const instance = TestBed.createComponent(FBTestComponent);\r\n    instance.detectChanges();\r\n    expect(instance.componentInstance).toBeDefined();\r\n    expect(Object.keys(instance.debugElement.classes)).toContain('fb-test');\r\n\r\n  });\r\n\r\n});\r\n\r\ndescribe('FBMLAttribute', () => {\r\n\r\n  let de: DebugElement,\r\n    comp: FBTestComponent,\r\n    fixture: ComponentFixture<FBTestComponent>;\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [ FBTestComponent ]\r\n    }).compileComponents();\r\n  }));\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(FBTestComponent);\r\n    comp = fixture.componentInstance;\r\n    de = fixture.debugElement;\r\n  });\r\n\r\n  it('should add data-test-attr attribute to element', () => {\r\n    comp.testAttr = 'test-val';\r\n    fixture.detectChanges();\r\n    expect(Object.keys(de.attributes)).toContain('data-test-attr');\r\n    expect(de.attributes['data-test-attr']).toEqual('test-val');\r\n    // should return value we set before\r\n    expect(comp.testAttr).toEqual('test-val');\r\n  });\r\n\r\n});\r\n\r\ndescribe('FBMLInstanceMethod', () => {\r\n\r\n  let de: DebugElement,\r\n    comp: FBTestComponent,\r\n    fixture: ComponentFixture<FBTestComponent>;\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [ FBTestComponent ]\r\n    }).compileComponents();\r\n  }));\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(FBTestComponent);\r\n    comp = fixture.componentInstance;\r\n    de = fixture.debugElement;\r\n  });\r\n\r\n  it('should do basic call to instance method', () => {\r\n    spyOn(comp._instance, 'testMethod').and.callThrough();\r\n    const res = comp.testMethod();\r\n    expect(comp._instance.testMethod).toHaveBeenCalled();\r\n    expect(res).toEqual('success');\r\n  });\r\n\r\n  it('should do call with args to instance method', () => {\r\n    spyOn(comp._instance, 'testMethodWithArgs').and.callThrough();\r\n    const res = comp.testMethodWithArgs('hello', 'world');\r\n    expect(comp._instance.testMethodWithArgs).toHaveBeenCalledWith('hello', 'world');\r\n    expect(res).toEqual(2);\r\n  });\r\n\r\n});\r\n"]}