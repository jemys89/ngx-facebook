{"version":3,"file":"facebook.spec.js","sourceRoot":"","sources":["../../../../src/providers/facebook.spec.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,uCAA6C;IAC7C,iDAA8C;IAK9C,QAAQ,CAAC,iBAAiB,EAAE;QAE1B,IAAI,OAAwB,CAAC;QAE7B,SAAS,CAAC;YACR,OAAO,GAAG,IAAI,0BAAe,EAAE,CAAC;YAC/B,MAAc,CAAC,IAAI,CAAC,GAAG;gBACtB,IAAI,EAAE,UAAC,MAAkB,IAAK,OAAA,MAAM,EAAN,CAAM;gBACpC,KAAK,EAAE,cAAO,CAAC;aAChB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE;YAC7C,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+CAA+C,EAAE,eAAK,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC;gBAC5B,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,aAAa,EAAE;YAChB,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAM,OAAO,GAAe;gBAC1B,KAAK,EAAE,kBAAkB;gBACzB,OAAO,EAAE,MAAM;aAChB,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mBAAmB,EAAE;YACtB,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAC1B,OAAO,CAAC,KAAK,EAAE,CAAC;YAChB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC7C,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC","sourcesContent":["import { FacebookService } from './facebook';\nimport { async } from '@angular/core/testing';\nimport { InitParams } from '../models/init-params';\n\ndeclare var window: any;\n\ndescribe('FacebookService', () => {\n\n  let service: FacebookService;\n\n  beforeAll(() => {\n    service = new FacebookService();\n    (window as any)['FB'] = {\n      init: (params: InitParams) => params,\n      login: () => {}\n    };\n  });\n\n  it('should create an instance of the service', () => {\n    expect(service).toBeDefined();\n  });\n\n  it('should throw error if we call api before init', async(() => {\n    service.api('friends').catch(e => {\n      expect(e).toBeDefined();\n    });\n  }));\n\n  it('should init', () => {\n    spyOn(window.FB, 'init').and.callThrough();\n    const options: InitParams = {\n      appId: '1927971220769787',\n      version: 'v2.8'\n    };\n    service.init(options);\n    expect(window.FB.init).toHaveBeenCalledWith(options);\n  });\n\n  it('should call login', () => {\n    spyOn(window.FB, 'login');\n    service.login();\n    expect(window.FB.login).toHaveBeenCalled();\n  });\n\n});\n"]}